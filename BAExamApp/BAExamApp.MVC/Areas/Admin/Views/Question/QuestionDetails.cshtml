@model AdminQuestionApprovedVM
<head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11">
</head>
<div class="card py-3">
    <div class="d-flex justify-content-between ps-9 pt-6">
        <!--begin::Card title-->
        <div>
            <h3 class="fw-bolder m-o">@SharedLocalizer["Question_Detail"]</h3>
        </div>
        <div class="d-flex justify-content-end">
            <a class="btn btn-secondary align-self-center ms-2 mx-4" asp-action="GetQuestionsByGivenValues" method="post" asp-route-state=@Model.State asp-route-adminQuestionListVM="">@SharedLocalizer["Back_List"]</a>
            @if ((Model.State == State.Awaited))
            {

                <form action="/Trainer/QuestionController/QuestionList" method="post">
                    @*
                ======================================================
                Asagidaki kod ileri bir tarihe kadar kapali kalacak
                ======================================================
                *@
                    @*<button class="btn btn-info me-2" asp-action="Test" asp-route-id=@Model.Id>@ViewLocalizer["Test"]</button>*@
                    <button class="btn btn-success me-2" asp-action="Approve" asp-route-id=@Model.Id>@SharedLocalizer["Approve"]</button>
                </form>
                <!-- Revize butonu -->
                <button type="button" class="btn btn-warning me-2" data-bs-toggle="modal" data-bs-target="#reviewModal">
                    @SharedLocalizer["Revise"]
                </button>
                <button type="button" class="btn btn-danger me-2" data-bs-toggle="modal" data-bs-target="#rejectModal">
                    @SharedLocalizer["Reject"]
                </button>
            }

        </div>
        <!--end::Card title-->
    </div>
    <div class="card-body  fs-6 py-15 px-10 py-lg-15 px-lg-15">
        <div class="row mb-7">
            <label class="w-250px fw-bold ">@Html.DisplayNameFor(model => model.CreatedBy)</label>
            <div class="col-12 col-sm-6">
                <span class="fw-bolder fs-6 text-gray-800">: @Model.CreatedBy</span>
            </div>
        </div>
        <div class="row mb-7">
            <label class="w-250px fw-bold  ">@Html.DisplayNameFor(model => model.CreatedDate)</label>
            <div class="col-12 col-sm-6">
                <span class="fw-bolder fs-6 text-gray-800">: @Model.CreatedDate.ToShortDateString()</span>
            </div>
        </div>
        <div class="row mb-7">
            <label class="w-250px fw-bold  ">
                @Html.DisplayNameFor(model => model.SubtopicName)
            </label>
            <div class="col-12 col-sm-6">
                <span class="fw-bolder fs-6 text-gray-800">
                   : @string.Join(", ", Model.SubtopicName)
                </span>
            </div>
        </div>
        <div class="row mb-7">
            <label class="w-250px fw-bold  ">
                @Html.DisplayNameFor(model => model.QuestionType)
            </label>
            <div class="col-12 col-sm-6">
                <span class="fw-bolder fs-6 text-gray-800">
                    : @Html.DisplayFor(model => model.QuestionType)
                </span>
            </div>
        </div>
        <div class="row mb-7">
            <label class="w-250px fw-bold  ">
                @Html.DisplayNameFor(model => model.QuestionDifficultyName)
            </label>
            <div class="w-250px fw-bold">
                <span class="fw-bolder fs-6 text-gray-800">
                   : @Html.DisplayFor(model => model.QuestionDifficultyName)
                </span>
            </div>
        </div>
        <div class="row mb-7">
            @if ((Model.ModifiedDate.Date == Model.CreatedDate.Date) && (Model.ModifiedDate.Hour == Model.CreatedDate.Hour)
           && (Model.ModifiedDate.Minute == Model.CreatedDate.Minute))
            {
                <label class="w-250px fw-bold  ">@Html.DisplayNameFor(model => model.ModifiedDate)</label>
                <div class="col-12 col-sm-6">
                    <label id="ModifiedDate" name="ModifiedDate">: @SharedLocalizer["IsNotModified"]</label>
                </div>
            }
            else
            {
        <label class="w-250px fw-bold ">@Html.DisplayNameFor(model => model.ModifiedDate)</label>
                <div class="col-12 col-sm-6">
                    <span class="fw-bolder fs-6 text-gray-800" id="ModifiedDate" name="ModifiedDate">: @Model.ModifiedDate.ToShortDateString() (@Model.ModifiedDate.ToString("HH:mm"))</span>
                </div>
            }
        </div>
        <div class="row mb-7">
            <label class="w-250px fw-bold">
                @Html.DisplayNameFor(model => model.AverageAnswerTime)
            </label>
            <div class="col-12 col-sm-6">
                <span class="fw-bolder fs-6 text-gray-800">
                    :
                    @if (Model.AverageAnswerTime != TimeSpan.Zero)
                    {
                        @Html.DisplayFor(model => model.AverageAnswerTime)
                    }
                    else
                    {
                        @SharedLocalizer["Question-Not-Used"]
                    }
                </span>
            </div>
        </div>
        <div class="row mb-7">
            <label class="w-250px fw-bold">
                @Html.DisplayNameFor(model => model.LongestAnswerTime)
            </label>
            <div class="col-12 col-sm-6">
                <span class="fw-bolder fs-6 text-gray-800">
                    :
                    @if (Model.LongestAnswerTime != TimeSpan.Zero)
                    {
                        @Html.DisplayFor(model => model.LongestAnswerTime)
                    }
                    else
                    {
                        @SharedLocalizer["Question-Not-Used"]
                    }
                </span>
            </div>
        </div>
        <div class="row mb-7">
            <label class="w-250px fw-bold">
                @Html.DisplayNameFor(model => model.ShortestAnswerTime)
            </label>
            <div class="col-12 col-sm-6">
                <span class="fw-bolder fs-6 text-gray-800">
                    :
                    @if (Model.ShortestAnswerTime != TimeSpan.Zero)
                    {
                        @Html.DisplayFor(model => model.ShortestAnswerTime)
                    }
                    else
                    {
                        @SharedLocalizer["Question-Not-Used"]
                    }
                </span>
            </div>
        </div>
        <hr />
        <div class="row mb-7">
            <label class="w-250px fw-bold ">
                @Html.DisplayNameFor(model => model.Content)
            </label>
            <div class="col-12 col-sm-8">
                <span class="fw-bolder fs-6 text-gray-800">
                    : @Html.DisplayFor(model => model.Content)
                </span>
            </div>
        </div>
        @if (Model.Image != null)
        {
            <div class="row mb-7 align-content-center">
                <div id="item-header-cover-image">
                    <img src="data:image/jpeg;base64,@Model.Image"
                         class="avatar user-1-avatar avatar-150 photo" alt="image" style="width: auto; height: 100%" />
                </div>
            </div>
        }
        <div class="row mb-7">
            <label class="w-250px fw-bold ">
                @Html.DisplayNameFor(model => model.QuestionAnswers)
            </label>
            <div class="col-12 col-sm-6">
                @if (Model.QuestionType == QuestionType.TrueFalse)
                {
                    @foreach (var item in Model.QuestionAnswers)
                    {
                        @if (item.IsRightAnswer)
                        {
                            @if (item.IsAnswerImage)
                            {
                                <div class="col-lg-12">
                                    <img id="defaultImage"
                                         class="col-lg-12 img-fluid img-thumbnail"
                                         src="@item.Answer"
                                         style="max-height:150px;max-width:300px; margin-bottom:20px;"
                                         alt="Profile" />
                                    <span class="badge badge-success">@SharedLocalizer["True"]</span>
                                </div>
                            }
                            else
                            {
                                <p class="fw-bolder fs-6 text-gray-800">
                                    @SharedLocalizer[item.Answer]
                                    <span class="badge badge-success">@SharedLocalizer["True"]</span>
                                </p>
                            }
                        }
                        else
                        {
                            @if (item.IsAnswerImage)
                            {
                                <div class="col-lg-12">
                                    <img id="defaultImage"
                                         class="col-lg-12 img-fluid img-thumbnail"
                                         src="@item.Answer"
                                         style="max-height:150px;max-width:300px; margin-bottom:20px;"
                                         alt="Profile" />
                                </div>

                            }
                            else
                            {
                                <p class="fw-bolder fs-6 text-gray-800">
                                    @SharedLocalizer[item.Answer]
                                </p>
                            }
                        }
                    }
                }
                else
                {
                    @foreach (var item in Model.QuestionAnswers)
                    {
                        @if (item.IsRightAnswer)
                        {
                            @if (item.IsAnswerImage)
                            {
                                <div class="col-lg-12">
                                    <img id="defaultImage"
                                         class="col-lg-12 img-fluid img-thumbnail"
                                         src="@item.Answer"
                                         style="max-height:150px;max-width:300px; margin-bottom:20px;"
                                         alt="Profile" />
                                    <span class="badge badge-success">@SharedLocalizer["True"]</span>
                                </div>
                            }
                            else
                            {
                                <p class="fw-bolder fs-6 text-gray-800">
                                    @SharedLocalizer[item.Answer]
                                    <span class="badge badge-success">@SharedLocalizer["True"]</span>
                                </p>
                            }
                        }
                        else
                        {
                            @if (item.IsAnswerImage)
                            {
                                <div class="col-lg-12">
                                    <img id="defaultImage"
                                         class="col-lg-12 img-fluid img-thumbnail"
                                         src="@item.Answer"
                                         style="max-height:150px;max-width:300px; margin-bottom:20px;"
                                         alt="Profile" />
                                </div>
                            }
                            else
                            {
                                <p class="fw-bolder fs-6 text-gray-800">
                                    @SharedLocalizer[item.Answer]
                                </p>
                            }
                        }
                    }
                }
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="rejectModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="reject-form" asp-action="Reject" method="post">
                <div class="btn btn-icon btn-sm btn-active-icon-primary" style="padding-left: 94%" data-kt-users-modal-action="close">
                    <!--begin::Svg Icon | path: icons/duotune/arrows/arr061.svg-->
                    <span class="svg-icon svg-icon-1">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                            <rect opacity="0.5" x="6" y="17.3137" width="16" height="2" rx="1" transform="rotate(-45 6 17.3137)" fill="currentColor" />
                            <rect x="7.41422" y="6" width="16" height="2" rx="1" transform="rotate(45 7.41422 6)" fill="currentColor" />
                        </svg>
                    </span>
                    <!--end::Svg Icon-->
                </div>
                @*<div class="modal-header">
                <button id="reject-form-close" type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>*@
                <div class="modal-body">
                    <input asp-for="Id" class="form-control" hidden />
                    <div class="col-sm-12">
                        <label asp-for="RejectComment" class="fw-bolder ">@SharedLocalizer["Reject_Comment"]</label>
                        <textarea asp-for="RejectComment" class="form-control" rows="3" placeholder="@SharedLocalizer["Comment"]" required></textarea>
                        <span asp-validation-for="RejectComment" class="text-danger"></span>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger me-2" asp-action="Reject" asp-route-id=@Model.Id> @SharedLocalizer["Reject"] </button>
                </div>
            </form>
        </div>
    </div>
</div>
<div class="modal fade" id="reviewModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="revise-form" asp-action="Review" method="post">
                <div class="btn btn-icon btn-sm btn-active-icon-primary" style="padding-left: 94%" data-kt-users-modal-action="cancel">
                    <!--begin::Svg Icon | path: icons/duotune/arrows/arr061.svg-->
                    <span class="svg-icon svg-icon-1">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                            <rect opacity="0.5" x="6" y="17.3137" width="16" height="2" rx="1" transform="rotate(-45 6 17.3137)" fill="currentColor" />
                            <rect x="7.41422" y="6" width="16" height="2" rx="1" transform="rotate(45 7.41422 6)" fill="currentColor" />
                        </svg>
                    </span>
                    <!--end::Svg Icon-->
                </div>
                @*<div class="modal-header">
                <button id="revise-form-close" type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>*@
                <div class="modal-body">
                    <input asp-for="Id" class="form-control" hidden />
                    <div class="col-sm-12">
                        <label asp-for="TrainerID" class="fw-bolder "></label>
                        <select asp-for="TrainerID" class="form-control">
                            <option value="">-- Eğitmen Seçiniz --</option>
                            @foreach (var item in ViewBag.TrainerList as List<BAExamApp.Dtos.Trainers.TrainerListDto>)
                            {
                                @if (Model.TrainerID == item.Id)
                                {
                                    <option value="@item.Id" selected>@item.FullName</option>
                                }
                                else
                                {
                                    <option value="@item.Id">@item.FullName</option>
                                }
                            }
                        </select>

                        <span asp-validation-for="TrainerID" class="text-danger"></span>
                    </div>
                    <div class="col-sm-12">
                        <label asp-for="RequestDescription" class="fw-bolder "></label>
                        <textarea asp-for="RequestDescription" class="form-control" rows="3" placeholder="@SharedLocalizer["Comment"]" required></textarea>
                        <span asp-validation-for="RequestDescription" class="text-danger"></span>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-warning" asp-action="Review" asp-route-id=@Model.Id>@SharedLocalizer["Revise"]</button>
                </div>
            </form>
        </div>
    </div>
</div>


<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

@section Scripts {
    <script>
        //document.getElementById('reject-form-close').addEventListener('click', function () {
        //    document.getElementById('reject-form').reset();
        //});
        //document.getElementById('revise-form-close').addEventListener('click', function () {
        //    document.getElementById('revise-form').reset();
        //});
    </script>
    <script>
        var localizedTexts = {
            unsavedChangesTitle: '@SharedLocalizer["Unsaved_Changes_Title"]',
            unsavedChangesText: '@SharedLocalizer["Unsaved_Changes_Text"]',
            confirmButtonText: '@SharedLocalizer["Yes_Leave"]',
            cancelButtonText: '@SharedLocalizer["No_Stay"]',
            formSubmittedText: '@SharedLocalizer["Form_Submitted_Text"]',
            okButtonText: '@SharedLocalizer["Ok_Button_Text"]'
        };
        // Reject Modal Cancel button handler
        const rejectCloseButton = document.querySelector('[data-kt-users-modal-action="close"]');
        rejectCloseButton.addEventListener('click', e => {
            e.preventDefault();

            Swal.fire({
                title: localizedTexts.unsavedChangesTitle,
                text: localizedTexts.unsavedChangesText,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: localizedTexts.confirmButtonText,
                cancelButtonText: localizedTexts.cancelButtonText
            }).then((result) => {
                if (result.isConfirmed) {
                    // Event handler'ı geçici olarak kaldır
                    $('#rejectModal').off('hide.bs.modal');
                    // Modalı kapat
                    $('#rejectModal').modal('hide');
                    // Modal tamamen kapandıktan sonra event handler'ı tekrar ekle
                    $('#rejectModal').on('hidden.bs.modal', function () {
                        addRejectModalCloseConfirmation();
                        $(this).find('form').trigger('reset');
                    });
                }
            });
        });

        // Review Modal Cancel button handler
        const reviewCancelButton = document.querySelector('[data-kt-users-modal-action="cancel"]');
        reviewCancelButton.addEventListener('click', e => {
            e.preventDefault();

            Swal.fire({
                title: localizedTexts.unsavedChangesTitle,
                text: localizedTexts.unsavedChangesText,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: localizedTexts.confirmButtonText,
                cancelButtonText: localizedTexts.cancelButtonText
            }).then((result) => {
                if (result.isConfirmed) {
                    // Event handler'ı geçici olarak kaldır
                    $('#reviewModal').off('hide.bs.modal');
                    // Modalı kapat
                    $('#reviewModal').modal('hide');
                    // Modal tamamen kapandıktan sonra event handler'ı tekrar ekle
                    $('#reviewModal').on('hidden.bs.modal', function () {
                        addReviewModalCloseConfirmation();
                        $(this).find('form').trigger('reset');
                    });
                }
            });
        });

        // Modal kapatma işlemi için event handler
        function addRejectModalCloseConfirmation() {
            // Reject Modal'ı kapatmak için gerekli işlemleri burada tanımlayabilirsiniz.
        }

        function addReviewModalCloseConfirmation() {
            // Review Modal'ı kapatmak için gerekli işlemleri burada tanımlayabilirsiniz.
        }
    </script>
}




