@model IEnumerable<StudentExamsForAdminVM>


@{
    ViewData["Title"] = SharedLocalizer["Exams"];

    var latestClassroom = Model.Select(x => x.LatestClassroom).FirstOrDefault();
    var latestTrainers = Model.Select(x => x.LatestClassroomsTrainers).FirstOrDefault();
}
<div class="card ">
    <div class="card-body">
        <h5>  <b>@SharedLocalizer["Name"]: @Model.FirstOrDefault().StudentFullName</b>  </h5>
        <h5>  <b>@SharedLocalizer["Classroom"]:</b> @latestClassroom</h5>
        <h5>  <b>@SharedLocalizer["Trainers"]:</b> @latestTrainers</h5>
    </div>
</div>
<div class="card">
    <div class="card-body">
        <div class="tab-content" id="myTabContent">
            <table id="kt_datatable_example_2" class="table align-middle table-row-dashed min-h-400px fs-6 gy-5">
                <thead>
                    <tr class="text-start fw-bolder text-uppercase gs-0 text-gray-400">
                        <td class="categories text-start">@SharedLocalizer["Classroom_Name"]</td>
                        <td class="categories text-start">@SharedLocalizer["Name_Of_The_Exam"]</td>
                        <td class="categories text-start">@SharedLocalizer["Exam_Type"]</td>
                        <td class="categories text-start">@SharedLocalizer["Exam_Date_Time"]</td>
                        <td class="text-left fw-bold text-black">@SharedLocalizer["Student_Score"] / @SharedLocalizer["Max_Score"]</td>
                        <td class="categories text-start">@SharedLocalizer["Exam_Details"] </td>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var studentExams in Model)
                    {
                        <tr class="text-start fw-bolder text-uppercase ">
                            <td class="categories text-start text-gray-600">
                                <a>
                                    @foreach (var item in studentExams.ClassroomNames)
                                    {
                                        if (studentExams.StudentClassroomNames.Contains(item))
                                        {
                                            <span class="post_category">@item</span>
                                        }
                                    }
                                </a>
                            </td>
                            <td class="categories text-start text-gray-600">
                                <a>
                                    <span class="post_category">@studentExams.ExamName</span>
                                </a>
                            </td>
                            <td class="categories text-start text-gray-600">
                                <a>
                                    <span class="post_category">@studentExams.ExamType</span>
                                </a>
                            </td>
                            <td class="categories text-start text-gray-600">
                                <a>
                                    <span class="post_category">@studentExams.ExamDateTime</span>
                                </a>
                            </td>
                            <td class="categories text-center text-gray-600">


                                @if (studentExams.Score == null)
                                {
                                    <a>
                                        
                                            @if (@studentExams.ExcuseDescription == null)
                                            {
                                                <b class="text-danger"> Sınava Girmedi. Mazeret Bildirilmedi.</b>
                                            }
                                            else
                                            {
                                                <b class="text-warning"> Sınava Girmedi. Mazeret Bildirildi.</b>
                                            }

                                    </a>
                                }
                                else
                                {
                                    <a>
                                        <span class="post_category">@studentExams.Score / @studentExams.MaxScore</span>
                                    </a>
                                }
                              
                            </td>
                            <td class="categories text-left">

                                @if (studentExams.Score != null)
                                {
                                    <a class="btn btn-primary text-center fs-5" type="button" asp-controller="Student" asp-action="GetExamResult" asp-route-studentExamId="@studentExams.Id">
                                        Sınav Rapor Detayı
                                    </a>

                                }
                                else
                                {
                                    if (@studentExams.ExcuseDescription != null)
                                    {
                                 
                                        <a type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#kt_modal_excuse_detail" data-excuse-description="@studentExams.ExcuseDescription">
                                            Mazeret Detayı
                                        </a>
                                    }
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<partial name="~/Areas/Admin/Views/Student/_ExcuseDetailPartialView.cshtml"/>

@section Scripts
    {
    <script src="~/lib/limonte-sweetalert2/sweetalert2.all.js"></script>
    <script>
        $(".deleteAction").click(function () {
            const id = $(this).attr("data-id");
            Swal.fire({
                title: 'Emin misiniz?',
                text: "Bu işlem geri alınamaz!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Evet, sil!',
                cancelButtonText: 'Vazgeç'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        type: "GET",
                        url: "@Url.Action("Delete")" + "?id=" + id,
                        success: function (result) {
                            if (result.isSuccess) {
                                setTimeout(() => location.href = "@Url.Action("index")", 2000)
                            }
                        }
                    });
                }
            })
        });
        $(document).ready(function () {

            var dt = $("#kt_datatable_example_2").DataTable({

                lengthMenu: [10, 25, 50, 100],

                dom:

                    '<"row"<"col-sm-12"t>>' +

                    '<"row"<"col-sm-12 col-md-1"l><"col-sm-12 col-md-5"i><"col-sm-12 col-md-6"p>>',

                language: {

                    emptyTable: "Tabloda herhangi bir veri bulunmamaktadır",

                    infoEmpty: "Gösterilecek hiçbir kayıt yok",

                    infoFiltered: "(toplam _MAX_ kayıt içerisinden filtrelenmiştir)",

                    zeroRecords: "Eşleşen kayıt bulunamadı",

                },

            });

            $('body').on('change', 'select[name="kt_datatable_example_2_length"]', function () {

                dt.page.len($(this).val()).draw();

                $(this).css({

                    'border': '0 solid transparent',

                    'transition': 'color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out'

                });

            });

            dt.on('draw.dt', function () {

                updateInfoText(dt.page.info());

            });

            function updateInfoText(pageInfo) {

                var infoText = pageInfo.recordsTotal + " kayıttan " + (pageInfo.start + 1) + " ile " + pageInfo.end + " arasındaki kayıtlar gösteriliyor";

                $('#kt_datatable_example_2_info').html(infoText).css({

                    'margin-top': '6px',

                    'font-size': '14px',

                    'font-family': 'Poppins, Helvetica, sans- serif',

                });

            }

            updateInfoText(dt.page.info());

            function updatePaginationArrows() {

                var prevButton = $('#kt_datatable_example_2_previous a');

                prevButton.html('<i class="fa fa-chevron-left"></i>');

                var nextButton = $('#kt_datatable_example_2_next a');

                nextButton.html('<i class="fa fa-chevron-right"></i>');

                var pageButtons = $('#kt_datatable_example_2_paginate .page-item');

                var activePage = $('#kt_datatable_example_1_paginate .page-item.active a');

                activePage.css({

                    'color': '#ffffff'

                });
            }

            updatePaginationArrows();

            dt.on('draw.dt', function () {

                updatePaginationArrows();

            });

        });
    </script>
}